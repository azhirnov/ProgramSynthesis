float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 000038D2, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.526004
	// ticks:      20
	// commands:   11
	return ((arg0 * arg1) + ((arg0 * arg1) + (arg2 / arg3)))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 0001C612, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.526004
	// ticks:      20
	// commands:   11
	return ((arg1 * arg0) + ((arg1 / arg2) + (arg3 * arg0)))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 0001C682, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.526004
	// ticks:      20
	// commands:   11
	return (((arg1 * arg0) + (arg1 / arg2)) + (arg3 * arg0))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 0001C690, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.526004
	// ticks:      20
	// commands:   11
	return ((arg3 * arg0) + ((arg1 * arg0) + (arg1 / arg2)))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 000028FA, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.577878
	// ticks:      21
	// commands:   11
	const float c_zero = float(0);
	return ((arg3 * arg0) + (arg1 >= c_zero ? (arg2 + arg0) : (arg1 / arg2)))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 000147C2, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.577878
	// ticks:      21
	// commands:   11
	const float c_zero = float(0);
	return ((arg0 >= c_zero ? (arg1 + arg2) : (arg0 / arg1)) + (arg2 * arg3))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 000147D0, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.577878
	// ticks:      21
	// commands:   11
	const float c_zero = float(0);
	return ((arg2 * arg3) + (arg0 >= c_zero ? (arg1 + arg2) : (arg0 / arg1)))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 00002CFA, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.579674
	// ticks:      13
	// commands:   11
	const float c_zero = float(0);
	const float c_one = float(1);
	return ((arg3 * arg0) + (arg1 >= c_zero ? (arg2 + arg0) : (arg1 > arg2 ? c_one : -c_one)))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 000167C2, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.579674
	// ticks:      13
	// commands:   11
	const float c_zero = float(0);
	const float c_one = float(1);
	return ((arg0 >= c_zero ? (arg1 + arg2) : (arg0 > arg1 ? c_one : -c_one)) + (arg2 * arg3))
}

//====================================


float main (float arg0, float arg1, float arg2, float arg3)
{
	// fun hash:   { 000167D0, 00000000 }
	// const hash: { 00000000, 00000000 }
	// accuracy:   0.579674
	// ticks:      13
	// commands:   11
	const float c_zero = float(0);
	const float c_one = float(1);
	return ((arg2 * arg3) + (arg0 >= c_zero ? (arg1 + arg2) : (arg0 > arg1 ? c_one : -c_one)))
}

//====================================


